# Calibre
export PATH=$PATH:/Applications/calibre.app/Contents/MacOS/

# Download a URL's HTML, copy and filter out specified tags
# Note: XPATH copy tags for untested websites may have to be added
# Note: If multiple sibling elements are marked to be copied,
#       there will be duplication of HTML tags
remove_bloat() {
    # Tested on: SSC, LessWrong, Putanumonit, Ribbonfarm, Gwern
    # TODO Passing putanumonit to rview with grep and awk doesn't work
    export XSL_COPY_TEMPLATE=$(generate_xsl_copy_template \
        "//style" "//head" "//main/header" "//main/article" "//div[@class='story']" \
        "//h1[contains(@class,'PostsPageTitle-root')]" "//div[@class='PostsPage-postContent']" \
        "//div[contains(@id,'content')]/div[contains(@id,'post-') or contains(@class,'post-')]" \
    )
    export XSL_REMOVE_TEMPLATE=$(generate_xsl_remove_template \
        "script" \
        "div[@id='sidebar']" \
        "div[@id='comments']" \
        "div[@class='related-posts']" \
        "div[@class='pjgm-postutility']" \
        "div[contains(@class,'widget')]" \
        "div[starts-with(@class,'author')]" \
        "div[starts-with(@class,'share') or starts-with(@id,'share')]" \
    )

    # The -L flag tells curl to follow redirects
    curl -L $1 -o /tmp/temp.html -sS
    xsltproc --html <(echo "$XSL_COPY_TEMPLATE") /tmp/temp.html > /tmp/xsltemp0.html
    xsltproc --html <(echo "$XSL_REMOVE_TEMPLATE") /tmp/xsltemp0.html > /tmp/xsltemp.html
} &> /dev/null

# URL to ebook + send to Kindle
skindle_main() {
    # Download URL's HTML and remove bloat
    remove_bloat $1
    # Convert HTML file to mobi
    ebook-convert /tmp/xsltemp.html /tmp/temp.mobi
    # Send converted .mobi file using calibre-smtp
    calibre-smtp --attachment /tmp/temp.mobi --relay smtp.gmail.com --port 587 --username $EMAIL --password $EMAIL_PASSWORD --encryption-method TLS $EMAIL $KINDLE_EMAIL ""
    rm /tmp/temp.mobi && rm /tmp/temp.html && rm /tmp/xsltemp.html
} &> /dev/null # Silence stdout and errors

# Open URLs with bloat removed
rview() {
    # Accept arguments via stdin if no arguments are provided
    if (( ${#} == 0 )) ; then
        while read -r line ; do
            remove_bloat ${line}
            open /tmp/xsltemp.html
        done
    else
        remove_bloat $1
        open /tmp/xsltemp.html
    fi
}

# Provide UI and stdin wrapper around skindle_main
skindle() {
    terminal-notifier -title "Send to Kindle" -message "Starting..."
    # Loop through stdin for arguments if no arguments are provided
    if (( ${#} == 0 )) ; then
        while read -r line ; do
            skindle_main ${line}
            echo "Sent to Kindle: ${line}"
        done
    else
        skindle_main $1
        echo "Sent to Kindle: $1"
    fi

    terminal-notifier -title "Send to Kindle" -message "Complete!"
}
